version: 2
jobs:
  node10x:
    docker:
    - image: circleci/node:10-jessie
    steps:
    - checkout
    - run:
        name: Install deps
        command: npm install
    - run:
        command: npm test
    - run:
        when: on_success
        command: npm run codecov
    - run:
        when: on_success
        command: npm run codecov
    - run:
        name: Cypress
        command: npm run cypress:run
    - store_artifacts:
        path: qa/cypress/videos
    - store_artifacts:
        path: qa/cypress/screenshots
  node12x:
    docker:
    - image: circleci/node:12
    steps:
    - checkout
    - run:
        name: Install deps
        command: npm install
    - run:
        command: npm test
    - run:
        when: on_success
        command: npm run codecov
    - run:
        when: on_success
        command: npm run codecov
    - run:
        name: Cypress
        command: npm run cypress:run
    - store_artifacts:
        path: qa/cypress/videos
    - store_artifacts:
        path: qa/cypress/screenshots
workflows:
  version: 2
  required-checks:
    jobs:
    - node10x:
        context: docker-registry-auth
  optional-checks:
    jobs:
    - node12x:
        context: docker-registry-auth

# Original config.yml file:
# version: 2.1
# 
# commands:
#   all-tests:
#     description: 'Roda todos os testes do projeto (unit\u00E1rios e integra\u00E7\u00E3o)'
#     steps:
#       - run: 'npm test'
# 
# jobs:
#   node10x: &template
#     docker:
#       - image: circleci/node:10-jessie
#         #auth:
#         #username: $B2WADS_DOCKER_REGISTRY_USERNAME
#         #password: $B2WADS_DOCKER_REGISTRY_PASSWORD
#       #- image: mongo:3.6
#       #- image: elasticsearch:5
#       #- image: rabbitmq:3.6-alpine
#       #- image: redis:5
#     steps:
#       - checkout
#       - run:
#           name: Install deps
#           command: npm install
#       # - run:
#       #     name: Format check
#       #     command: npm run fmt:check
#       - all-tests
#       - run:
#           when: on_success
#           command: npm run codecov
#       - run:
#           when: on_success
#           command: npm run codecov
#       - run: 
#           name: Cypress
#           command: npm run cypress:run
#       - store_artifacts:
#           path: qa/cypress/videos
#       - store_artifacts:
#           path: qa/cypress/screenshots
#   node12x:
#     <<: *template
#     docker:
#       - image: circleci/node:12
#       #- image: mongo:3.6
#       #- image: elasticsearch:5
#       #- image: rabbitmq:3.6-alpine
#       #- image: redis:5
# 
# # O `context:` abaixo deve ser usado se voc\u00EA precisa
# # de uma imagem privada. Nesse context devem estar cadastradas as envs:
# # - B2WADS_DOCKER_REGISTRY_USERNAME
# # - B2WADS_DOCKER_REGISTRY_PASSWORD
# workflows:
#   version: 2
#   required-checks:
#     jobs:
#       - node10x:
#           context: docker-registry-auth
#   optional-checks:
#     jobs:
#       - node12x:
#           context: docker-registry-auth